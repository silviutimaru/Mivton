// Debug helper functions for modal visibility issues\n\nfunction debugModalVisibility() {\n    console.log('🔍 MODAL VISIBILITY DEBUG REPORT');\n    console.log('================================');\n    \n    // Create a test element\n    const testEl = document.createElement('div');\n    testEl.innerHTML = 'DEBUG TEST ELEMENT';\n    testEl.style.cssText = `\n        position: fixed !important;\n        top: 50px !important;\n        left: 50px !important;\n        width: 300px !important;\n        height: 100px !important;\n        background: lime !important;\n        color: black !important;\n        z-index: 99999999 !important;\n        border: 5px solid red !important;\n        font-size: 20px !important;\n        display: flex !important;\n        align-items: center !important;\n        justify-content: center !important;\n    `;\n    \n    document.body.appendChild(testEl);\n    \n    // Check all the things\n    setTimeout(() => {\n        const rect = testEl.getBoundingClientRect();\n        const computed = window.getComputedStyle(testEl);\n        \n        console.log('Test element info:', {\n            inDOM: document.body.contains(testEl),\n            rect: rect,\n            computed: {\n                display: computed.display,\n                visibility: computed.visibility,\n                opacity: computed.opacity,\n                position: computed.position,\n                zIndex: computed.zIndex\n            },\n            visible: rect.width > 0 && rect.height > 0\n        });\n        \n        // Check body and html\n        const bodyStyles = window.getComputedStyle(document.body);\n        const htmlStyles = window.getComputedStyle(document.documentElement);\n        \n        console.log('Container styles:', {\n            body: {\n                overflow: bodyStyles.overflow,\n                position: bodyStyles.position,\n                display: bodyStyles.display,\n                visibility: bodyStyles.visibility\n            },\n            html: {\n                overflow: htmlStyles.overflow,\n                position: htmlStyles.position,\n                display: htmlStyles.display,\n                visibility: htmlStyles.visibility\n            }\n        });\n        \n        // Check for elements that might be covering\n        const elementsAtPoint = document.elementsFromPoint(200, 100);\n        console.log('Elements at test position:', elementsAtPoint);\n        \n        // Auto-remove after 3 seconds\n        setTimeout(() => {\n            testEl.remove();\n            console.log('✅ Debug test element removed');\n        }, 3000);\n        \n    }, 100);\n}\n\nfunction forceShowTestModal() {\n    console.log('🚀 FORCING TEST MODAL');\n    \n    // Remove any existing test modals\n    const existing = document.querySelectorAll('[id^=\"force-test-modal\"]');\n    existing.forEach(el => el.remove());\n    \n    // Create new test modal\n    const modal = document.createElement('div');\n    modal.id = 'force-test-modal-' + Date.now();\n    modal.innerHTML = `\n        <div style=\"\n            position: fixed !important;\n            top: 0 !important;\n            left: 0 !important;\n            right: 0 !important;\n            bottom: 0 !important;\n            background: rgba(255, 0, 0, 0.9) !important;\n            z-index: 999999999 !important;\n            display: flex !important;\n            align-items: center !important;\n            justify-content: center !important;\n            font-family: Arial !important;\n        \">\n            <div style=\"\n                background: white !important;\n                color: black !important;\n                padding: 50px !important;\n                border: 10px solid blue !important;\n                border-radius: 20px !important;\n                text-align: center !important;\n                font-size: 24px !important;\n                font-weight: bold !important;\n                max-width: 500px !important;\n            \">\n                <h2 style=\"color: red; margin: 0 0 20px 0;\">🚨 FORCE TEST MODAL 🚨</h2>\n                <p style=\"margin: 0 0 20px 0;\">If you can see this, modal display works!</p>\n                <button onclick=\"this.closest('[id^=\\'force-test-modal\\']').remove()\" style=\"\n                    background: red !important;\n                    color: white !important;\n                    border: none !important;\n                    padding: 15px 30px !important;\n                    font-size: 18px !important;\n                    cursor: pointer !important;\n                    border-radius: 10px !important;\n                \">CLOSE</button>\n            </div>\n        </div>\n    `;\n    \n    document.body.appendChild(modal);\n    \n    console.log('Force test modal created:', {\n        element: modal,\n        rect: modal.getBoundingClientRect(),\n        computed: window.getComputedStyle(modal)\n    });\n}\n\n// Expose globally\nwindow.debugModalVisibility = debugModalVisibility;\nwindow.forceShowTestModal = forceShowTestModal;\n\nconsole.log('🔧 Debug functions loaded:');\nconsole.log('- debugModalVisibility() - Run detailed visibility checks');\nconsole.log('- forceShowTestModal() - Force show a test modal');\n